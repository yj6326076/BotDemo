
plugins {
    id 'org.springframework.boot' version '2.6.6'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'org.asciidoctor.convert' version '1.5.8'
    id 'java'
    id 'org.jetbrains.kotlin.jvm' version '1.5.30'
    id 'org.jetbrains.kotlin.plugin.serialization' version '1.5.30'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'


repositories {
    maven {
        url 'https://maven.aliyun.com/repository/public/'
    }
    maven {
        url 'https://maven.aliyun.com/repository/apache-snapshots/'
    }
    maven {
        url 'https://maven.aliyun.com/repository/google/'
    }
    mavenCentral()
}
configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

ext {
    set('snippetsDir', file("build/generated-snippets"))
}

subprojects {
    tasks.withType(JavaCompiler) {
        options.encoding = 'UTF-8'
    }
}

tasks.named('test') {
    outputs.dir snippetsDir
    useJUnitPlatform()
}

tasks.named('asciidoctor') {
    inputs.dir snippetsDir
    dependsOn test
}

allprojects {
    apply plugin: 'java'
    apply plugin: 'idea'
    apply plugin: 'io.spring.dependency-management'
    apply plugin: 'org.springframework.boot'
    apply plugin: 'org.asciidoctor.convert'
    apply plugin: 'org.jetbrains.kotlin.jvm'
    apply plugin: 'org.jetbrains.kotlin.plugin.serialization'

    group = 'com.example'
    version = '0.0.1-SNAPSHOT'
    sourceCompatibility = '11'


    repositories {
        maven {
            url 'https://maven.aliyun.com/repository/public/'
        }
        maven {
            url 'https://maven.aliyun.com/repository/apache-snapshots/'
        }
        maven {
            url 'https://maven.aliyun.com/repository/google/'
        }
        mavenCentral()
    }

    repositories {
        mavenCentral()
    }

    dependencies {
        implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
        implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'
        implementation 'org.springframework.boot:spring-boot-starter-data-redis-reactive'
        implementation 'org.springframework.boot:spring-boot-starter-data-elasticsearch'
        implementation 'org.springframework.boot:spring-boot-starter-quartz'
        implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
        implementation 'org.springframework.boot:spring-boot-starter-web'
        annotationProcessor "org.springframework.boot:spring-boot-autoconfigure-processor"
        implementation "org.springframework.boot:spring-boot-autoconfigure-processor"
        implementation("net.mamoe:mirai-core-jvm:2.10.1") {
            exclude group: 'net.mamoe', module: 'mirai-core-api'
            exclude group: 'net.mamoe', module: 'mirai-core-utils'
        }
        implementation("net.mamoe:mirai-core-api-jvm:2.10.1") {
            exclude group: 'net.mamoe', module: 'mirai-core-utils'
            exclude group: "net.mamoe", module: "mirai-console-compiler-annotations"
        }
        implementation("net.mamoe:mirai-core-utils-jvm:2.10.1")
        implementation 'org.apache.commons:commons-lang3:3.12.0'
        compileOnly 'org.projectlombok:lombok'
        testCompileOnly 'org.projectlombok:lombok'
        implementation 'org.springframework.boot:spring-boot-devtools'
        runtimeOnly 'mysql:mysql-connector-java'
        runtimeOnly 'org.mariadb.jdbc:mariadb-java-client'
        annotationProcessor 'org.projectlombok:lombok'
        testAnnotationProcessor 'org.projectlombok:lombok'
        testImplementation 'org.springframework.boot:spring-boot-starter-test'
        testImplementation 'io.projectreactor:reactor-test'
        testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'
        implementation group: 'io.reactivex.rxjava3', name: 'rxjava', version: '3.0.8'
        implementation group: 'javax.inject', name: 'javax.inject', version: '1'
        implementation group: 'com.alibaba', name: 'druid-spring-boot-starter', version: '1.2.3'
        implementation group: 'com.alibaba', name: 'fastjson', version: '1.2.75'
        implementation group: 'com.alibaba', name: 'easyexcel', version: '2.2.6'
        implementation group: 'io.springfox', name: 'springfox-boot-starter', version: '3.0.0'
        implementation group: 'org.apache.commons', name: 'commons-jexl3', version: '3.2.1'
        implementation group: 'org.apache.httpcomponents.client5', name: 'httpclient5', version: '5.1.2'
        implementation group: 'com.alibaba', name: 'easyexcel', version: '3.0.5'
    }

    tasks.named('test') {
        outputs.dir snippetsDir
        useJUnitPlatform()
    }

    tasks.named('asciidoctor') {
        inputs.dir snippetsDir
        dependsOn test
    }

    tasks.named('compileJava') {
        inputs.files(tasks.named('processResources'))
    }
    subprojects {
        tasks.withType(JavaCompiler) {
            options.encoding = 'UTF-8'
        }

        buildscript {
            //skip Test tasks
            gradle.taskGraph.whenReady {
                tasks.each { task ->
                    if (task.name.contains("test"))
                    {
                        task.enabled = false
                    }
                }
            }
        }
    }
}

subprojects { p -> {
    dependencies {
        if (p != project(':common')) {
            implementation(project(":common"))
        }
    }
}

}
